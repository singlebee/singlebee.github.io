<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>git on 烤肉肉</title>
        <link>https://singlebee.github.io/tags/git/</link>
        <description>Recent content in git on 烤肉肉</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 04 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://singlebee.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>git学习</title>
        <link>https://singlebee.github.io/post/%E5%A5%B3%E5%A8%B2%E8%A1%A5%E5%A4%A9/git%E5%AD%A6%E4%B9%A0/</link>
        <pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://singlebee.github.io/post/%E5%A5%B3%E5%A8%B2%E8%A1%A5%E5%A4%A9/git%E5%AD%A6%E4%B9%A0/</guid>
        <description>&lt;p&gt;用vscode魔改主题的时候发现，vscode自带git版本控制，潜意识告诉我这个东西很好用。&lt;/p&gt;
&lt;h1 id=&#34;获取git仓库&#34;&gt;获取Git仓库&lt;/h1&gt;
&lt;p&gt;如果有个尚未版本控制的项目目录，cd到该目录下，执行 &lt;code&gt;git init&lt;/code&gt;命令。该命令会创建一个名为&lt;code&gt;.git&lt;/code&gt;的子目录，根据我的反复折腾，这应该是这个Git仓库的核心。
注意，这个阶段只是进行了初始化操作，文件目前还处于未跟踪的状态，具体原理就先不去深究了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;初始化&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：我用的Windows，看说明Linux的commit信息用单引号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就完成了git仓库的初始化。&lt;/p&gt;
&lt;h1 id=&#34;提交&#34;&gt;提交&lt;/h1&gt;
&lt;p&gt;修改过文件之后，就可以在源代码管理（Ctrl+shift+G）中提交，在消息中输入这次提交的commit，点击提交就完成了一次覆盖。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
